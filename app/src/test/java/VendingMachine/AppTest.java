/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package VendingMachine;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    VendingMachine vendingMachine=new VendingMachine();

    @Test void ValidateVendingMachine(){
        VendingMachine vendingMachine=new VendingMachine();
        assertTrue(vendingMachine.AddItem("Snicker", ItemType.Snacks, 3, "Chcolate Bar"));
        assertTrue(vendingMachine.AddItem("Lays", ItemType.Snacks, 1, "Potata Chips"));
        assertFalse(vendingMachine.AddItem("Snicker", ItemType.Snacks, 1, "Chcolate Bar"));
        assertTrue(vendingMachine.AddItem("Tuna Sandwish", ItemType.Snacks, 1, "Tuna Sandwish"));
        assertTrue(vendingMachine.AddItem("Flafel", ItemType.Snacks, 2, "Sandwishes"));
        assertTrue(vendingMachine.AddItem("Orange Juice", ItemType.ColdDrinks, 3, "Potata Chips"));
        assertTrue(vendingMachine.AddItem("Latte", ItemType.HotDrinks, 2, "Potata Chips"));
        assertTrue(vendingMachine.AddItem("Tea", ItemType.HotDrinks, 1, "Potata Chips"));

        assertEquals(0, vendingMachine.GetCredit(),"Get credit should be 0");
        assertTrue(vendingMachine.addMoney(1),"1 is allowed unit to add");
        assertFalse(vendingMachine.BuyItem("Flafel"),"Not Enough credit to buy Flafel");
        assertTrue(vendingMachine.addMoney(1),"1 is allowed unit to add");
        assertTrue(vendingMachine.addMoney(10),"10 is allowed unit to add");
        assertTrue(vendingMachine.addMoney(5),"5 is allowed unit to add");
        assertTrue(vendingMachine.addMoney(1),"1 is allowed unit to add");
        assertFalse(vendingMachine.addMoney(50),"50 is not allowed unit to add");

        assertEquals(18,vendingMachine.GetCredit(),"Get credit should be 18");

        assertFalse(vendingMachine.BuyItem("Mango Juice"),"Mango Juice is not available");

        assertTrue(vendingMachine.BuyItem("Latte"),"Latte should be bought successfully");
        assertEquals(16, vendingMachine.GetCredit(), "Get credit should be 16");

        assertTrue(vendingMachine.BuyItem("Tea"),"Tea should be bought successfully");
        assertEquals(15, vendingMachine.GetCredit(), "Get credit should be 15");

        assertTrue(vendingMachine.BuyItem("Flafel"),"Flafel should be bought successfully");
        assertEquals(13, vendingMachine.GetCredit(), "Get credit should be 13");

        assertEquals(13,vendingMachine.ReturnChange(),"Change is 13");
    }
}
